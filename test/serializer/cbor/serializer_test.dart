import 'dart:collection';
import 'dart:typed_data';

import 'package:connectanum/connectanum.dart';
import 'package:connectanum/src/message/hello.dart';
import 'package:connectanum/src/message/message_types.dart';
import 'package:connectanum/src/message/welcome.dart';
import 'package:connectanum/src/message/yield.dart';
import 'package:connectanum/src/message/ppt_payload.dart';
import 'package:connectanum/src/serializer/cbor/serializer.dart';
import 'package:test/test.dart';

void main() {
  var serializer = Serializer();
  group('serialize', () {
    test('Hello', () {
      expect(
          serializer.serialize(Hello('my.realm', Details.forHello())),
          equals(Uint8List.fromList([
            131,
            1,
            104,
            109,
            121,
            46,
            114,
            101,
            97,
            108,
            109,
            161,
            101,
            114,
            111,
            108,
            101,
            115,
            164,
            102,
            99,
            97,
            108,
            108,
            101,
            114,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            165,
            110,
            99,
            97,
            108,
            108,
            95,
            99,
            97,
            110,
            99,
            101,
            108,
            105,
            110,
            103,
            244,
            108,
            99,
            97,
            108,
            108,
            95,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            244,
            117,
            99,
            97,
            108,
            108,
            101,
            114,
            95,
            105,
            100,
            101,
            110,
            116,
            105,
            102,
            105,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            120,
            24,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            105,
            118,
            101,
            95,
            99,
            97,
            108,
            108,
            95,
            114,
            101,
            115,
            117,
            108,
            116,
            115,
            245,
            102,
            99,
            97,
            108,
            108,
            101,
            101,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            168,
            117,
            99,
            97,
            108,
            108,
            101,
            114,
            95,
            105,
            100,
            101,
            110,
            116,
            105,
            102,
            105,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            112,
            99,
            97,
            108,
            108,
            95,
            116,
            114,
            117,
            115,
            116,
            108,
            101,
            118,
            101,
            108,
            115,
            244,
            120,
            26,
            112,
            97,
            116,
            116,
            101,
            114,
            110,
            95,
            98,
            97,
            115,
            101,
            100,
            95,
            114,
            101,
            103,
            105,
            115,
            116,
            114,
            97,
            116,
            105,
            111,
            110,
            244,
            115,
            115,
            104,
            97,
            114,
            101,
            100,
            95,
            114,
            101,
            103,
            105,
            115,
            116,
            114,
            97,
            116,
            105,
            111,
            110,
            244,
            108,
            99,
            97,
            108,
            108,
            95,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            244,
            110,
            99,
            97,
            108,
            108,
            95,
            99,
            97,
            110,
            99,
            101,
            108,
            105,
            110,
            103,
            244,
            120,
            24,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            105,
            118,
            101,
            95,
            99,
            97,
            108,
            108,
            95,
            114,
            101,
            115,
            117,
            108,
            116,
            115,
            245,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            106,
            115,
            117,
            98,
            115,
            99,
            114,
            105,
            98,
            101,
            114,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            165,
            108,
            99,
            97,
            108,
            108,
            95,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            244,
            110,
            99,
            97,
            108,
            108,
            95,
            99,
            97,
            110,
            99,
            101,
            108,
            105,
            110,
            103,
            244,
            120,
            24,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            105,
            118,
            101,
            95,
            99,
            97,
            108,
            108,
            95,
            114,
            101,
            115,
            117,
            108,
            116,
            115,
            244,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            119,
            115,
            117,
            98,
            115,
            99,
            114,
            105,
            112,
            116,
            105,
            111,
            110,
            95,
            114,
            101,
            118,
            111,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            105,
            112,
            117,
            98,
            108,
            105,
            115,
            104,
            101,
            114,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            164,
            120,
            24,
            112,
            117,
            98,
            108,
            105,
            115,
            104,
            101,
            114,
            95,
            105,
            100,
            101,
            110,
            116,
            105,
            102,
            105,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            120,
            29,
            115,
            117,
            98,
            115,
            99,
            114,
            105,
            98,
            101,
            114,
            95,
            98,
            108,
            97,
            99,
            107,
            119,
            104,
            105,
            116,
            101,
            95,
            108,
            105,
            115,
            116,
            105,
            110,
            103,
            245,
            115,
            112,
            117,
            98,
            108,
            105,
            115,
            104,
            101,
            114,
            95,
            101,
            120,
            99,
            108,
            117,
            115,
            105,
            111,
            110,
            245,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245
          ])));
      expect(
          serializer.serialize(Hello(null, Details.forHello())),
          equals(Uint8List.fromList([
            131,
            1,
            246,
            161,
            101,
            114,
            111,
            108,
            101,
            115,
            164,
            102,
            99,
            97,
            108,
            108,
            101,
            114,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            165,
            110,
            99,
            97,
            108,
            108,
            95,
            99,
            97,
            110,
            99,
            101,
            108,
            105,
            110,
            103,
            244,
            108,
            99,
            97,
            108,
            108,
            95,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            244,
            117,
            99,
            97,
            108,
            108,
            101,
            114,
            95,
            105,
            100,
            101,
            110,
            116,
            105,
            102,
            105,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            120,
            24,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            105,
            118,
            101,
            95,
            99,
            97,
            108,
            108,
            95,
            114,
            101,
            115,
            117,
            108,
            116,
            115,
            245,
            102,
            99,
            97,
            108,
            108,
            101,
            101,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            168,
            117,
            99,
            97,
            108,
            108,
            101,
            114,
            95,
            105,
            100,
            101,
            110,
            116,
            105,
            102,
            105,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            112,
            99,
            97,
            108,
            108,
            95,
            116,
            114,
            117,
            115,
            116,
            108,
            101,
            118,
            101,
            108,
            115,
            244,
            120,
            26,
            112,
            97,
            116,
            116,
            101,
            114,
            110,
            95,
            98,
            97,
            115,
            101,
            100,
            95,
            114,
            101,
            103,
            105,
            115,
            116,
            114,
            97,
            116,
            105,
            111,
            110,
            244,
            115,
            115,
            104,
            97,
            114,
            101,
            100,
            95,
            114,
            101,
            103,
            105,
            115,
            116,
            114,
            97,
            116,
            105,
            111,
            110,
            244,
            108,
            99,
            97,
            108,
            108,
            95,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            244,
            110,
            99,
            97,
            108,
            108,
            95,
            99,
            97,
            110,
            99,
            101,
            108,
            105,
            110,
            103,
            244,
            120,
            24,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            105,
            118,
            101,
            95,
            99,
            97,
            108,
            108,
            95,
            114,
            101,
            115,
            117,
            108,
            116,
            115,
            245,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            106,
            115,
            117,
            98,
            115,
            99,
            114,
            105,
            98,
            101,
            114,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            165,
            108,
            99,
            97,
            108,
            108,
            95,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            244,
            110,
            99,
            97,
            108,
            108,
            95,
            99,
            97,
            110,
            99,
            101,
            108,
            105,
            110,
            103,
            244,
            120,
            24,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            105,
            118,
            101,
            95,
            99,
            97,
            108,
            108,
            95,
            114,
            101,
            115,
            117,
            108,
            116,
            115,
            244,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            119,
            115,
            117,
            98,
            115,
            99,
            114,
            105,
            112,
            116,
            105,
            111,
            110,
            95,
            114,
            101,
            118,
            111,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            105,
            112,
            117,
            98,
            108,
            105,
            115,
            104,
            101,
            114,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            164,
            120,
            24,
            112,
            117,
            98,
            108,
            105,
            115,
            104,
            101,
            114,
            95,
            105,
            100,
            101,
            110,
            116,
            105,
            102,
            105,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            120,
            29,
            115,
            117,
            98,
            115,
            99,
            114,
            105,
            98,
            101,
            114,
            95,
            98,
            108,
            97,
            99,
            107,
            119,
            104,
            105,
            116,
            101,
            95,
            108,
            105,
            115,
            116,
            105,
            110,
            103,
            245,
            115,
            112,
            117,
            98,
            108,
            105,
            115,
            104,
            101,
            114,
            95,
            101,
            120,
            99,
            108,
            117,
            115,
            105,
            111,
            110,
            245,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245
          ])));
    });
    test('Hello with auth information', () {
      var authHello = Hello('my.realm', Details.forHello());
      authHello.details.authid = 'Richard';
      authHello.details.authmethods = ['WAMP-CRA'];
      authHello.details.authextra = HashMap();
      authHello.details.authextra!['nonce'] = 'egVDf3DMJh0=';
      authHello.details.authextra!['channel_binding'] = null;
      expect(
          serializer.serialize(authHello),
          equals(Uint8List.fromList([
            131,
            1,
            104,
            109,
            121,
            46,
            114,
            101,
            97,
            108,
            109,
            164,
            101,
            114,
            111,
            108,
            101,
            115,
            164,
            102,
            99,
            97,
            108,
            108,
            101,
            114,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            165,
            110,
            99,
            97,
            108,
            108,
            95,
            99,
            97,
            110,
            99,
            101,
            108,
            105,
            110,
            103,
            244,
            108,
            99,
            97,
            108,
            108,
            95,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            244,
            117,
            99,
            97,
            108,
            108,
            101,
            114,
            95,
            105,
            100,
            101,
            110,
            116,
            105,
            102,
            105,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            120,
            24,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            105,
            118,
            101,
            95,
            99,
            97,
            108,
            108,
            95,
            114,
            101,
            115,
            117,
            108,
            116,
            115,
            245,
            102,
            99,
            97,
            108,
            108,
            101,
            101,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            168,
            117,
            99,
            97,
            108,
            108,
            101,
            114,
            95,
            105,
            100,
            101,
            110,
            116,
            105,
            102,
            105,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            112,
            99,
            97,
            108,
            108,
            95,
            116,
            114,
            117,
            115,
            116,
            108,
            101,
            118,
            101,
            108,
            115,
            244,
            120,
            26,
            112,
            97,
            116,
            116,
            101,
            114,
            110,
            95,
            98,
            97,
            115,
            101,
            100,
            95,
            114,
            101,
            103,
            105,
            115,
            116,
            114,
            97,
            116,
            105,
            111,
            110,
            244,
            115,
            115,
            104,
            97,
            114,
            101,
            100,
            95,
            114,
            101,
            103,
            105,
            115,
            116,
            114,
            97,
            116,
            105,
            111,
            110,
            244,
            108,
            99,
            97,
            108,
            108,
            95,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            244,
            110,
            99,
            97,
            108,
            108,
            95,
            99,
            97,
            110,
            99,
            101,
            108,
            105,
            110,
            103,
            244,
            120,
            24,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            105,
            118,
            101,
            95,
            99,
            97,
            108,
            108,
            95,
            114,
            101,
            115,
            117,
            108,
            116,
            115,
            245,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            106,
            115,
            117,
            98,
            115,
            99,
            114,
            105,
            98,
            101,
            114,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            165,
            108,
            99,
            97,
            108,
            108,
            95,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            244,
            110,
            99,
            97,
            108,
            108,
            95,
            99,
            97,
            110,
            99,
            101,
            108,
            105,
            110,
            103,
            244,
            120,
            24,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            105,
            118,
            101,
            95,
            99,
            97,
            108,
            108,
            95,
            114,
            101,
            115,
            117,
            108,
            116,
            115,
            244,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            119,
            115,
            117,
            98,
            115,
            99,
            114,
            105,
            112,
            116,
            105,
            111,
            110,
            95,
            114,
            101,
            118,
            111,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            105,
            112,
            117,
            98,
            108,
            105,
            115,
            104,
            101,
            114,
            161,
            104,
            102,
            101,
            97,
            116,
            117,
            114,
            101,
            115,
            164,
            120,
            24,
            112,
            117,
            98,
            108,
            105,
            115,
            104,
            101,
            114,
            95,
            105,
            100,
            101,
            110,
            116,
            105,
            102,
            105,
            99,
            97,
            116,
            105,
            111,
            110,
            245,
            120,
            29,
            115,
            117,
            98,
            115,
            99,
            114,
            105,
            98,
            101,
            114,
            95,
            98,
            108,
            97,
            99,
            107,
            119,
            104,
            105,
            116,
            101,
            95,
            108,
            105,
            115,
            116,
            105,
            110,
            103,
            245,
            115,
            112,
            117,
            98,
            108,
            105,
            115,
            104,
            101,
            114,
            95,
            101,
            120,
            99,
            108,
            117,
            115,
            105,
            111,
            110,
            245,
            117,
            112,
            97,
            121,
            108,
            111,
            97,
            100,
            95,
            112,
            97,
            115,
            115,
            116,
            104,
            114,
            117,
            95,
            109,
            111,
            100,
            101,
            245,
            102,
            97,
            117,
            116,
            104,
            105,
            100,
            103,
            82,
            105,
            99,
            104,
            97,
            114,
            100,
            107,
            97,
            117,
            116,
            104,
            109,
            101,
            116,
            104,
            111,
            100,
            115,
            129,
            104,
            87,
            65,
            77,
            80,
            45,
            67,
            82,
            65,
            105,
            97,
            117,
            116,
            104,
            101,
            120,
            116,
            114,
            97,
            162,
            111,
            99,
            104,
            97,
            110,
            110,
            101,
            108,
            95,
            98,
            105,
            110,
            100,
            105,
            110,
            103,
            246,
            101,
            110,
            111,
            110,
            99,
            101,
            108,
            101,
            103,
            86,
            68,
            102,
            51,
            68,
            77,
            74,
            104,
            48,
            61
          ])));
    });
    test('Authenticate', () {
      expect(serializer.serialize(Authenticate()),
          equals(Uint8List.fromList([131, 5, 96, 160])));
      expect(
          serializer.serialize(Authenticate.signature('someSignature')),
          equals(Uint8List.fromList([
            131,
            5,
            109,
            115,
            111,
            109,
            101,
            83,
            105,
            103,
            110,
            97,
            116,
            117,
            114,
            101,
            160
          ])));
      var authenticate = Authenticate.signature('someSignature');
      authenticate.extra = HashMap<String, Object?>();
      authenticate.extra!['nonce'] = 'abc';
      expect(
          serializer.serialize(authenticate),
          equals(Uint8List.fromList([
            131,
            5,
            109,
            115,
            111,
            109,
            101,
            83,
            105,
            103,
            110,
            97,
            116,
            117,
            114,
            101,
            161,
            101,
            110,
            111,
            110,
            99,
            101,
            99,
            97,
            98,
            99
          ])));
    });
    test('Register', () {
      expect(
          serializer.serialize(Register(25349185, 'com.myapp.myprocedure1')),
          equals(Uint8List.fromList([
            132,
            24,
            64,
            26,
            1,
            130,
            204,
            65,
            160,
            118,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            112,
            114,
            111,
            99,
            101,
            100,
            117,
            114,
            101,
            49
          ])));
      expect(
          serializer.serialize(Register(25349185, 'com.myapp.myprocedure1',
              options: RegisterOptions(
                  discloseCaller: true,
                  invoke: RegisterOptions.invocationPolicyRandom,
                  match: RegisterOptions.matchPrefix))),
          equals(Uint8List.fromList([
            132,
            24,
            64,
            26,
            1,
            130,
            204,
            65,
            163,
            101,
            109,
            97,
            116,
            99,
            104,
            102,
            112,
            114,
            101,
            102,
            105,
            120,
            111,
            100,
            105,
            115,
            99,
            108,
            111,
            115,
            101,
            95,
            99,
            97,
            108,
            108,
            101,
            114,
            245,
            102,
            105,
            110,
            118,
            111,
            107,
            101,
            102,
            114,
            97,
            110,
            100,
            111,
            109,
            118,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            112,
            114,
            111,
            99,
            101,
            100,
            117,
            114,
            101,
            49
          ])));
      expect(
          serializer.serialize(Register(25349185, 'com.myapp.myprocedure2',
              options: RegisterOptions(discloseCaller: false))),
          equals(Uint8List.fromList([
            132,
            24,
            64,
            26,
            1,
            130,
            204,
            65,
            161,
            111,
            100,
            105,
            115,
            99,
            108,
            111,
            115,
            101,
            95,
            99,
            97,
            108,
            108,
            101,
            114,
            244,
            118,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            112,
            114,
            111,
            99,
            101,
            100,
            117,
            114,
            101,
            50
          ])));
    });
    test('Unregister', () {
      expect(
          serializer.serialize(Unregister(25349185, 127981236)),
          equals(Uint8List.fromList(
              [131, 24, 66, 26, 1, 130, 204, 65, 26, 7, 160, 214, 180])));
    });
    test('Call', () {
      expect(
          serializer.serialize(Call(7814135, 'com.myapp.ping')),
          equals(Uint8List.fromList([
            132,
            24,
            48,
            26,
            0,
            119,
            59,
            247,
            160,
            110,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            112,
            105,
            110,
            103
          ])));
      expect(
          serializer.serialize(
              Call(7814135, 'com.myapp.ping', options: CallOptions())),
          equals(Uint8List.fromList([
            132,
            24,
            48,
            26,
            0,
            119,
            59,
            247,
            160,
            110,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            112,
            105,
            110,
            103
          ])));
      expect(
          serializer.serialize(Call(7814135, 'com.myapp.ping',
              options: CallOptions(
                  receiveProgress: true, discloseMe: true, timeout: 12))),
          equals(Uint8List.fromList([
            132,
            24,
            48,
            26,
            0,
            119,
            59,
            247,
            163,
            112,
            114,
            101,
            99,
            101,
            105,
            118,
            101,
            95,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            245,
            107,
            100,
            105,
            115,
            99,
            108,
            111,
            115,
            101,
            95,
            109,
            101,
            245,
            103,
            116,
            105,
            109,
            101,
            111,
            117,
            116,
            12,
            110,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            112,
            105,
            110,
            103
          ])));
      expect(
          serializer
              .serialize(Call(7814135, 'com.myapp.ping', arguments: ['hi', 2])),
          equals(Uint8List.fromList([
            133,
            24,
            48,
            26,
            0,
            119,
            59,
            247,
            160,
            110,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            112,
            105,
            110,
            103,
            130,
            98,
            104,
            105,
            2
          ])));
      expect(
          serializer.serialize(
              Call(7814135, 'com.myapp.ping', argumentsKeywords: {'hi': 12})),
          equals(Uint8List.fromList([
            134,
            24,
            48,
            26,
            0,
            119,
            59,
            247,
            160,
            110,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            112,
            105,
            110,
            103,
            128,
            161,
            98,
            104,
            105,
            12
          ])));
      expect(
          serializer.serialize(Call(7814135, 'com.myapp.ping',
              arguments: ['hi', 2], argumentsKeywords: {'hi': 12})),
          equals(Uint8List.fromList([
            134,
            24,
            48,
            26,
            0,
            119,
            59,
            247,
            160,
            110,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            112,
            105,
            110,
            103,
            130,
            98,
            104,
            105,
            2,
            161,
            98,
            104,
            105,
            12
          ])));
    });
    test('Yield', () {
      expect(serializer.serialize(Yield(6131533)),
          equals(Uint8List.fromList([131, 24, 70, 26, 0, 93, 143, 77, 160])));
      expect(
          serializer.serialize(
              Yield(6131533, options: YieldOptions(progress: false))),
          equals(Uint8List.fromList([
            131,
            24,
            70,
            26,
            0,
            93,
            143,
            77,
            161,
            104,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            244
          ])));
      expect(
          serializer
              .serialize(Yield(6131533, options: YieldOptions(progress: true))),
          equals(Uint8List.fromList([
            131,
            24,
            70,
            26,
            0,
            93,
            143,
            77,
            161,
            104,
            112,
            114,
            111,
            103,
            114,
            101,
            115,
            115,
            245
          ])));
      expect(
          serializer.serialize(Yield(6131533, arguments: ['hi', 2])),
          equals(Uint8List.fromList(
              [132, 24, 70, 26, 0, 93, 143, 77, 160, 130, 98, 104, 105, 2])));
      expect(
          serializer.serialize(Yield(6131533, argumentsKeywords: {'hi': 12})),
          equals(Uint8List.fromList([
            133,
            24,
            70,
            26,
            0,
            93,
            143,
            77,
            160,
            128,
            161,
            98,
            104,
            105,
            12
          ])));
      expect(
          serializer.serialize(Yield(6131533,
              arguments: ['hi', 2], argumentsKeywords: {'hi': 12})),
          equals(Uint8List.fromList([
            133,
            24,
            70,
            26,
            0,
            93,
            143,
            77,
            160,
            130,
            98,
            104,
            105,
            2,
            161,
            98,
            104,
            105,
            12
          ])));
    });
    test('Error', () {
      expect(
          serializer.serialize(
              Error(MessageTypes.codeHello, 123422, HashMap(), 'wamp.unknown')),
          equals(Uint8List.fromList([
            133,
            8,
            1,
            26,
            0,
            1,
            226,
            30,
            160,
            108,
            119,
            97,
            109,
            112,
            46,
            117,
            110,
            107,
            110,
            111,
            119,
            110
          ])));
      expect(
          serializer.serialize(Error(MessageTypes.codeHello, 123422,
              HashMap.from({'cause': 'some'}), 'wamp.unknown')),
          equals(Uint8List.fromList([
            133,
            8,
            1,
            26,
            0,
            1,
            226,
            30,
            161,
            101,
            99,
            97,
            117,
            115,
            101,
            100,
            115,
            111,
            109,
            101,
            108,
            119,
            97,
            109,
            112,
            46,
            117,
            110,
            107,
            110,
            111,
            119,
            110
          ])));
      expect(
          serializer.serialize(Error(MessageTypes.codeHello, 123422,
              HashMap.from({'cause': 'some'}), 'wamp.unknown',
              arguments: ['hi', 2])),
          equals(Uint8List.fromList([
            134,
            8,
            1,
            26,
            0,
            1,
            226,
            30,
            161,
            101,
            99,
            97,
            117,
            115,
            101,
            100,
            115,
            111,
            109,
            101,
            108,
            119,
            97,
            109,
            112,
            46,
            117,
            110,
            107,
            110,
            111,
            119,
            110,
            130,
            98,
            104,
            105,
            2
          ])));
      expect(
          serializer.serialize(Error(MessageTypes.codeHello, 123422,
              HashMap.from({'cause': 'some'}), 'wamp.unknown',
              argumentsKeywords: {'hi': 12})),
          equals(Uint8List.fromList([
            135,
            8,
            1,
            26,
            0,
            1,
            226,
            30,
            161,
            101,
            99,
            97,
            117,
            115,
            101,
            100,
            115,
            111,
            109,
            101,
            108,
            119,
            97,
            109,
            112,
            46,
            117,
            110,
            107,
            110,
            111,
            119,
            110,
            128,
            161,
            98,
            104,
            105,
            12
          ])));
      expect(
          serializer.serialize(Error(MessageTypes.codeHello, 123422,
              HashMap.from({'cause': 'some'}), 'wamp.unknown',
              arguments: ['hi', 2], argumentsKeywords: {'hi': 12})),
          equals(Uint8List.fromList([
            135,
            8,
            1,
            26,
            0,
            1,
            226,
            30,
            161,
            101,
            99,
            97,
            117,
            115,
            101,
            100,
            115,
            111,
            109,
            101,
            108,
            119,
            97,
            109,
            112,
            46,
            117,
            110,
            107,
            110,
            111,
            119,
            110,
            130,
            98,
            104,
            105,
            2,
            161,
            98,
            104,
            105,
            12
          ])));
    });
    test('Subscribe', () {
      expect(
          serializer.serialize(Subscribe(713845233, 'com.myapp.mytopic1')),
          equals(Uint8List.fromList([
            132,
            24,
            32,
            26,
            42,
            140,
            105,
            241,
            160,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Subscribe(713845233, 'com.myapp.mytopic1',
              options: SubscribeOptions())),
          equals(Uint8List.fromList([
            132,
            24,
            32,
            26,
            42,
            140,
            105,
            241,
            160,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Subscribe(713845233, 'com.myapp.mytopic1',
              options: SubscribeOptions(match: SubscribeOptions.matchPlain))),
          equals(Uint8List.fromList([
            132,
            24,
            32,
            26,
            42,
            140,
            105,
            241,
            160,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Subscribe(713845233, 'com.myapp.mytopic1',
              options: SubscribeOptions(match: SubscribeOptions.matchPrefix))),
          equals(Uint8List.fromList([
            132,
            24,
            32,
            26,
            42,
            140,
            105,
            241,
            161,
            101,
            109,
            97,
            116,
            99,
            104,
            102,
            112,
            114,
            101,
            102,
            105,
            120,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Subscribe(713845233, 'com.myapp.mytopic1',
              options:
                  SubscribeOptions(match: SubscribeOptions.matchWildcard))),
          equals(Uint8List.fromList([
            132,
            24,
            32,
            26,
            42,
            140,
            105,
            241,
            161,
            101,
            109,
            97,
            116,
            99,
            104,
            104,
            119,
            105,
            108,
            100,
            99,
            97,
            114,
            100,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Subscribe(713845233, 'com.myapp.mytopic1',
              options: SubscribeOptions(metaTopic: 'topic'))),
          equals(Uint8List.fromList([
            132,
            24,
            32,
            26,
            42,
            140,
            105,
            241,
            161,
            106,
            109,
            101,
            116,
            97,
            95,
            116,
            111,
            112,
            105,
            99,
            101,
            116,
            111,
            112,
            105,
            99,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Subscribe(713845233, 'com.myapp.mytopic1',
              options: SubscribeOptions(
                  getRetained: true,
                  match: SubscribeOptions.matchWildcard,
                  metaTopic: 'topic'))),
          equals(Uint8List.fromList([
            132,
            24,
            32,
            26,
            42,
            140,
            105,
            241,
            163,
            108,
            103,
            101,
            116,
            95,
            114,
            101,
            116,
            97,
            105,
            110,
            101,
            100,
            245,
            101,
            109,
            97,
            116,
            99,
            104,
            104,
            119,
            105,
            108,
            100,
            99,
            97,
            114,
            100,
            106,
            109,
            101,
            116,
            97,
            95,
            116,
            111,
            112,
            105,
            99,
            101,
            116,
            111,
            112,
            105,
            99,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Subscribe(713845233, 'com.myapp.mytopic1',
              options: SubscribeOptions(match: SubscribeOptions.matchWildcard)
                ..addCustomValue('where', (_) => 12)
                ..addCustomValue('some', (_) => {'key': 'value'}))),
          equals(Uint8List.fromList([
            132,
            24,
            32,
            26,
            42,
            140,
            105,
            241,
            163,
            101,
            109,
            97,
            116,
            99,
            104,
            104,
            119,
            105,
            108,
            100,
            99,
            97,
            114,
            100,
            100,
            115,
            111,
            109,
            101,
            161,
            99,
            107,
            101,
            121,
            101,
            118,
            97,
            108,
            117,
            101,
            101,
            119,
            104,
            101,
            114,
            101,
            12,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
    });
    test('Unsubscribe', () {
      expect(
          serializer.serialize(Unsubscribe(85346237, 5512315355)),
          equals(Uint8List.fromList([
            131,
            24,
            34,
            26,
            5,
            22,
            71,
            189,
            27,
            0,
            0,
            0,
            1,
            72,
            143,
            65,
            219
          ])));
    });
    test('Publish', () {
      expect(
          serializer.serialize(Publish(239714735, 'com.myapp.mytopic1')),
          equals(Uint8List.fromList([
            132,
            16,
            26,
            14,
            73,
            193,
            175,
            160,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Publish(239714735, 'com.myapp.mytopic1',
              options: PublishOptions())),
          equals(Uint8List.fromList([
            132,
            16,
            26,
            14,
            73,
            193,
            175,
            160,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Publish(239714735, 'com.myapp.mytopic1',
              options: PublishOptions(
                  retain: true,
                  discloseMe: true,
                  acknowledge: true,
                  excludeMe: true,
                  eligible: [1],
                  eligibleAuthId: ['aaa'],
                  eligibleAuthRole: ['role'],
                  exclude: [2],
                  excludeAuthId: ['bbb'],
                  excludeAuthRole: ['admin']))),
          equals(Uint8List.fromList([
            132,
            16,
            26,
            14,
            73,
            193,
            175,
            169,
            102,
            114,
            101,
            116,
            97,
            105,
            110,
            245,
            107,
            97,
            99,
            107,
            110,
            111,
            119,
            108,
            101,
            100,
            103,
            101,
            245,
            106,
            101,
            120,
            99,
            108,
            117,
            100,
            101,
            95,
            109,
            101,
            245,
            103,
            101,
            120,
            99,
            108,
            117,
            100,
            101,
            129,
            2,
            110,
            101,
            120,
            99,
            108,
            117,
            100,
            101,
            95,
            97,
            117,
            116,
            104,
            105,
            100,
            129,
            99,
            98,
            98,
            98,
            112,
            101,
            120,
            99,
            108,
            117,
            100,
            101,
            95,
            97,
            117,
            116,
            104,
            114,
            111,
            108,
            101,
            129,
            101,
            97,
            100,
            109,
            105,
            110,
            104,
            101,
            108,
            105,
            103,
            105,
            98,
            108,
            101,
            129,
            1,
            111,
            101,
            108,
            105,
            103,
            105,
            98,
            108,
            101,
            95,
            97,
            117,
            116,
            104,
            105,
            100,
            129,
            99,
            97,
            97,
            97,
            113,
            101,
            108,
            105,
            103,
            105,
            98,
            108,
            101,
            95,
            97,
            117,
            116,
            104,
            114,
            111,
            108,
            101,
            129,
            100,
            114,
            111,
            108,
            101,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49
          ])));
      expect(
          serializer.serialize(Publish(239714735, 'com.myapp.mytopic1',
              arguments: ['Hello, world!'])),
          equals(Uint8List.fromList([
            133,
            16,
            26,
            14,
            73,
            193,
            175,
            160,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49,
            129,
            109,
            72,
            101,
            108,
            108,
            111,
            44,
            32,
            119,
            111,
            114,
            108,
            100,
            33
          ])));
      expect(
          serializer.serialize(Publish(239714735, 'com.myapp.mytopic1',
              options: PublishOptions(excludeMe: false),
              arguments: ['Hello, world!'])),
          equals(Uint8List.fromList([
            133,
            16,
            26,
            14,
            73,
            193,
            175,
            161,
            106,
            101,
            120,
            99,
            108,
            117,
            100,
            101,
            95,
            109,
            101,
            244,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49,
            129,
            109,
            72,
            101,
            108,
            108,
            111,
            44,
            32,
            119,
            111,
            114,
            108,
            100,
            33
          ])));
      expect(
          serializer.serialize(
              Publish(239714735, 'com.myapp.mytopic1', argumentsKeywords: {
            'color': 'orange',
            'sizes': [23, 42, 7]
          })),
          equals(Uint8List.fromList([
            134,
            16,
            26,
            14,
            73,
            193,
            175,
            160,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49,
            128,
            162,
            101,
            99,
            111,
            108,
            111,
            114,
            102,
            111,
            114,
            97,
            110,
            103,
            101,
            101,
            115,
            105,
            122,
            101,
            115,
            131,
            23,
            24,
            42,
            7
          ])));
      expect(
          serializer.serialize(Publish(239714735, 'com.myapp.mytopic1',
              options: PublishOptions(excludeMe: false),
              argumentsKeywords: {
                'color': 'orange',
                'sizes': [23, 42, 7]
              })),
          equals(Uint8List.fromList([
            134,
            16,
            26,
            14,
            73,
            193,
            175,
            161,
            106,
            101,
            120,
            99,
            108,
            117,
            100,
            101,
            95,
            109,
            101,
            244,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49,
            128,
            162,
            101,
            99,
            111,
            108,
            111,
            114,
            102,
            111,
            114,
            97,
            110,
            103,
            101,
            101,
            115,
            105,
            122,
            101,
            115,
            131,
            23,
            24,
            42,
            7
          ])));
      expect(
          serializer
              .serialize(Publish(239714735, 'com.myapp.mytopic1', arguments: [
            'Hello, world!'
          ], argumentsKeywords: {
            'color': 'orange',
            'sizes': [23, 42, 7]
          })),
          equals(Uint8List.fromList([
            134,
            16,
            26,
            14,
            73,
            193,
            175,
            160,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49,
            129,
            109,
            72,
            101,
            108,
            108,
            111,
            44,
            32,
            119,
            111,
            114,
            108,
            100,
            33,
            162,
            101,
            99,
            111,
            108,
            111,
            114,
            102,
            111,
            114,
            97,
            110,
            103,
            101,
            101,
            115,
            105,
            122,
            101,
            115,
            131,
            23,
            24,
            42,
            7
          ])));
      expect(
          serializer.serialize(Publish(239714735, 'com.myapp.mytopic1',
              options: PublishOptions(excludeMe: false),
              arguments: [
                'Hello, world!'
              ],
              argumentsKeywords: {
                'color': 'orange',
                'sizes': [23, 42, 7]
              })),
          equals(Uint8List.fromList([
            134,
            16,
            26,
            14,
            73,
            193,
            175,
            161,
            106,
            101,
            120,
            99,
            108,
            117,
            100,
            101,
            95,
            109,
            101,
            244,
            114,
            99,
            111,
            109,
            46,
            109,
            121,
            97,
            112,
            112,
            46,
            109,
            121,
            116,
            111,
            112,
            105,
            99,
            49,
            129,
            109,
            72,
            101,
            108,
            108,
            111,
            44,
            32,
            119,
            111,
            114,
            108,
            100,
            33,
            162,
            101,
            99,
            111,
            108,
            111,
            114,
            102,
            111,
            114,
            97,
            110,
            103,
            101,
            101,
            115,
            105,
            122,
            101,
            115,
            131,
            23,
            24,
            42,
            7
          ])));
    });
    test('Goodbye', () {
      expect(
          serializer.serialize(
              Goodbye(GoodbyeMessage('cya'), Goodbye.reasonGoodbyeAndOut)),
          equals(Uint8List.fromList([
            131,
            6,
            161,
            103,
            109,
            101,
            115,
            115,
            97,
            103,
            101,
            99,
            99,
            121,
            97,
            120,
            26,
            119,
            97,
            109,
            112,
            46,
            101,
            114,
            114,
            111,
            114,
            46,
            103,
            111,
            111,
            100,
            98,
            121,
            101,
            95,
            97,
            110,
            100,
            95,
            111,
            117,
            116
          ])));
      expect(
          serializer.serialize(
              Goodbye(GoodbyeMessage(null), Goodbye.reasonCloseRealm)),
          equals(Uint8List.fromList([
            131,
            6,
            161,
            103,
            109,
            101,
            115,
            115,
            97,
            103,
            101,
            96,
            118,
            119,
            97,
            109,
            112,
            46,
            101,
            114,
            114,
            111,
            114,
            46,
            99,
            108,
            111,
            115,
            101,
            95,
            114,
            101,
            97,
            108,
            109
          ])));
      expect(
          serializer.serialize(Goodbye(null, Goodbye.reasonSystemShutdown)),
          equals(Uint8List.fromList([
            131,
            6,
            160,
            120,
            26,
            119,
            97,
            109,
            112,
            46,
            101,
            114,
            114,
            111,
            114,
            46,
            115,
            121,
            115,
            116,
            101,
            109,
            95,
            115,
            104,
            117,
            116,
            100,
            111,
            119,
            110
          ])));
    });
    test('Abort', () {
      expect(
          serializer.serialize(
              Abort(Error.authorizationFailed, message: 'Some Error')),
          equals(Uint8List.fromList([
            131,
            3,
            161,
            103,
            109,
            101,
            115,
            115,
            97,
            103,
            101,
            106,
            83,
            111,
            109,
            101,
            32,
            69,
            114,
            114,
            111,
            114,
            120,
            31,
            119,
            97,
            109,
            112,
            46,
            101,
            114,
            114,
            111,
            114,
            46,
            97,
            117,
            116,
            104,
            111,
            114,
            105,
            122,
            97,
            116,
            105,
            111,
            110,
            95,
            102,
            97,
            105,
            108,
            101,
            100
          ])));
      expect(
          serializer.serialize(Abort(Error.authorizationFailed, message: '')),
          equals(Uint8List.fromList([
            131,
            3,
            161,
            103,
            109,
            101,
            115,
            115,
            97,
            103,
            101,
            96,
            120,
            31,
            119,
            97,
            109,
            112,
            46,
            101,
            114,
            114,
            111,
            114,
            46,
            97,
            117,
            116,
            104,
            111,
            114,
            105,
            122,
            97,
            116,
            105,
            111,
            110,
            95,
            102,
            97,
            105,
            108,
            101,
            100
          ])));
      expect(
          serializer.serialize(Abort(Error.authorizationFailed)),
          equals(Uint8List.fromList([
            131,
            3,
            160,
            120,
            31,
            119,
            97,
            109,
            112,
            46,
            101,
            114,
            114,
            111,
            114,
            46,
            97,
            117,
            116,
            104,
            111,
            114,
            105,
            122,
            97,
            116,
            105,
            111,
            110,
            95,
            102,
            97,
            105,
            108,
            101,
            100
          ])));
    });
    test('serializePPT', () {
      var arguments = <dynamic>[100, 'two', true];
      var argumentsKeywords = {'key1': 100, 'key2': 'two', 'key3': true};
      var pptPayload = PPTPayload(
          arguments: arguments, argumentsKeywords: argumentsKeywords);
      expect(
          serializer.serializePPT(pptPayload),
          equals(Uint8List.fromList([
            162,
            100,
            97,
            114,
            103,
            115,
            131,
            24,
            100,
            99,
            116,
            119,
            111,
            245,
            102,
            107,
            119,
            97,
            114,
            103,
            115,
            163,
            100,
            107,
            101,
            121,
            49,
            24,
            100,
            100,
            107,
            101,
            121,
            50,
            99,
            116,
            119,
            111,
            100,
            107,
            101,
            121,
            51,
            245
          ])));
    });
  });
  group('deserialize', () {
    test('Abort', () {
      var abort = serializer.deserialize(Uint8List.fromList([
        131,
        3,
        161,
        103,
        109,
        101,
        115,
        115,
        97,
        103,
        101,
        120,
        53,
        82,
        101,
        99,
        101,
        105,
        118,
        101,
        100,
        32,
        72,
        69,
        76,
        76,
        79,
        32,
        109,
        101,
        115,
        115,
        97,
        103,
        101,
        32,
        97,
        102,
        116,
        101,
        114,
        32,
        115,
        101,
        115,
        115,
        105,
        111,
        110,
        32,
        119,
        97,
        115,
        32,
        101,
        115,
        116,
        97,
        98,
        108,
        105,
        115,
        104,
        101,
        100,
        46,
        120,
        29,
        119,
        97,
        109,
        112,
        46,
        101,
        114,
        114,
        111,
        114,
        46,
        112,
        114,
        111,
        116,
        111,
        99,
        111,
        108,
        95,
        118,
        105,
        111,
        108,
        97,
        116,
        105,
        111,
        110
      ])) as Abort;
      expect(abort, isNotNull);
      expect(abort.id, equals(MessageTypes.codeAbort));
      expect(abort.message!.message,
          equals('Received HELLO message after session was established.'));
      expect(abort.reason, equals(Error.protocolViolation));
    });
    test('Challenge', () {
      var challenge = serializer.deserialize(Uint8List.fromList([
        131,
        4,
        103,
        119,
        97,
        109,
        112,
        99,
        114,
        97,
        164,
        105,
        99,
        104,
        97,
        108,
        108,
        101,
        110,
        103,
        101,
        120,
        172,
        123,
        34,
        97,
        117,
        116,
        104,
        105,
        100,
        34,
        58,
        34,
        82,
        105,
        99,
        104,
        105,
        34,
        44,
        34,
        97,
        117,
        116,
        104,
        114,
        111,
        108,
        101,
        34,
        58,
        34,
        97,
        100,
        109,
        105,
        110,
        34,
        44,
        34,
        97,
        117,
        116,
        104,
        109,
        101,
        116,
        104,
        111,
        100,
        34,
        58,
        34,
        119,
        97,
        109,
        112,
        99,
        114,
        97,
        34,
        44,
        34,
        97,
        117,
        116,
        104,
        112,
        114,
        111,
        118,
        105,
        100,
        101,
        114,
        34,
        58,
        34,
        115,
        101,
        114,
        118,
        101,
        114,
        34,
        44,
        34,
        110,
        111,
        110,
        99,
        101,
        34,
        58,
        34,
        53,
        54,
        51,
        54,
        49,
        49,
        55,
        53,
        54,
        56,
        55,
        54,
        56,
        49,
        50,
        50,
        34,
        44,
        34,
        116,
        105,
        109,
        101,
        115,
        116,
        97,
        109,
        112,
        34,
        58,
        34,
        50,
        48,
        49,
        56,
        45,
        48,
        51,
        45,
        49,
        54,
        84,
        48,
        55,
        58,
        50,
        57,
        90,
        34,
        44,
        34,
        115,
        101,
        115,
        115,
        105,
        111,
        110,
        34,
        58,
        34,
        53,
        55,
        54,
        56,
        53,
        48,
        49,
        48,
        57,
        57,
        49,
        51,
        48,
        56,
        51,
        54,
        34,
        125,
        100,
        115,
        97,
        108,
        116,
        114,
        102,
        104,
        104,
        105,
        50,
        57,
        48,
        102,
        104,
        55,
        194,
        167,
        41,
        71,
        81,
        41,
        71,
        41,
        102,
        107,
        101,
        121,
        108,
        101,
        110,
        24,
        35,
        106,
        105,
        116,
        101,
        114,
        97,
        116,
        105,
        111,
        110,
        115,
        25,
        1,
        154
      ])) as Challenge;
      expect(challenge, isNotNull);
      expect(challenge.id, equals(MessageTypes.codeChallenge));
      expect(challenge.authMethod, equals('wampcra'));
      expect(
          challenge.extra.challenge,
          equals(
              '{"authid":"Richi","authrole":"admin","authmethod":"wampcra","authprovider":"server","nonce":"5636117568768122","timestamp":"2018-03-16T07:29Z","session":"5768501099130836"}'));
      expect(challenge.extra.salt, equals('fhhi290fh7§)GQ)G)'));
      expect(challenge.extra.keyLen, equals(35));
      expect(challenge.extra.iterations, equals(410));
    });
    test('Welcome', () {
      var welcome = serializer.deserialize(Uint8List.fromList([
        131,
        2,
        26,
        0,
        1,
        182,
        105,
        165,
        102,
        97,
        117,
        116,
        104,
        105,
        100,
        101,
        82,
        105,
        99,
        104,
        105,
        104,
        97,
        117,
        116,
        104,
        114,
        111,
        108,
        101,
        101,
        97,
        100,
        109,
        105,
        110,
        106,
        97,
        117,
        116,
        104,
        109,
        101,
        116,
        104,
        111,
        100,
        103,
        119,
        97,
        109,
        112,
        99,
        114,
        97,
        108,
        97,
        117,
        116,
        104,
        112,
        114,
        111,
        118,
        105,
        100,
        101,
        114,
        104,
        100,
        97,
        116,
        97,
        98,
        97,
        115,
        101,
        101,
        114,
        111,
        108,
        101,
        115,
        162,
        102,
        98,
        114,
        111,
        107,
        101,
        114,
        161,
        104,
        102,
        101,
        97,
        116,
        117,
        114,
        101,
        115,
        168,
        120,
        24,
        112,
        117,
        98,
        108,
        105,
        115,
        104,
        101,
        114,
        95,
        105,
        100,
        101,
        110,
        116,
        105,
        102,
        105,
        99,
        97,
        116,
        105,
        111,
        110,
        244,
        120,
        26,
        112,
        97,
        116,
        116,
        101,
        114,
        110,
        95,
        98,
        97,
        115,
        101,
        100,
        95,
        115,
        117,
        98,
        115,
        99,
        114,
        105,
        112,
        116,
        105,
        111,
        110,
        244,
        117,
        115,
        117,
        98,
        115,
        99,
        114,
        105,
        112,
        116,
        105,
        111,
        110,
        95,
        109,
        101,
        116,
        97,
        95,
        97,
        112,
        105,
        244,
        120,
        29,
        115,
        117,
        98,
        115,
        99,
        114,
        105,
        98,
        101,
        114,
        95,
        98,
        108,
        97,
        99,
        107,
        119,
        104,
        105,
        116,
        101,
        95,
        108,
        105,
        115,
        116,
        105,
        110,
        103,
        244,
        112,
        115,
        101,
        115,
        115,
        105,
        111,
        110,
        95,
        109,
        101,
        116,
        97,
        95,
        97,
        112,
        105,
        244,
        115,
        112,
        117,
        98,
        108,
        105,
        115,
        104,
        101,
        114,
        95,
        101,
        120,
        99,
        108,
        117,
        115,
        105,
        111,
        110,
        244,
        109,
        101,
        118,
        101,
        110,
        116,
        95,
        104,
        105,
        115,
        116,
        111,
        114,
        121,
        244,
        117,
        112,
        97,
        121,
        108,
        111,
        97,
        100,
        95,
        112,
        97,
        115,
        115,
        116,
        104,
        114,
        117,
        95,
        109,
        111,
        100,
        101,
        244,
        102,
        100,
        101,
        97,
        108,
        101,
        114,
        161,
        104,
        102,
        101,
        97,
        116,
        117,
        114,
        101,
        115,
        170,
        117,
        99,
        97,
        108,
        108,
        101,
        114,
        95,
        105,
        100,
        101,
        110,
        116,
        105,
        102,
        105,
        99,
        97,
        116,
        105,
        111,
        110,
        244,
        112,
        99,
        97,
        108,
        108,
        95,
        116,
        114,
        117,
        115,
        116,
        108,
        101,
        118,
        101,
        108,
        115,
        244,
        120,
        26,
        112,
        97,
        116,
        116,
        101,
        114,
        110,
        95,
        98,
        97,
        115,
        101,
        100,
        95,
        114,
        101,
        103,
        105,
        115,
        116,
        114,
        97,
        116,
        105,
        111,
        110,
        244,
        117,
        114,
        101,
        103,
        105,
        115,
        116,
        114,
        97,
        116,
        105,
        111,
        110,
        95,
        109,
        101,
        116,
        97,
        95,
        97,
        112,
        105,
        244,
        115,
        115,
        104,
        97,
        114,
        101,
        100,
        95,
        114,
        101,
        103,
        105,
        115,
        116,
        114,
        97,
        116,
        105,
        111,
        110,
        244,
        112,
        115,
        101,
        115,
        115,
        105,
        111,
        110,
        95,
        109,
        101,
        116,
        97,
        95,
        97,
        112,
        105,
        244,
        108,
        99,
        97,
        108,
        108,
        95,
        116,
        105,
        109,
        101,
        111,
        117,
        116,
        244,
        110,
        99,
        97,
        108,
        108,
        95,
        99,
        97,
        110,
        99,
        101,
        108,
        105,
        110,
        103,
        244,
        120,
        24,
        112,
        114,
        111,
        103,
        114,
        101,
        115,
        115,
        105,
        118,
        101,
        95,
        99,
        97,
        108,
        108,
        95,
        114,
        101,
        115,
        117,
        108,
        116,
        115,
        244,
        117,
        112,
        97,
        121,
        108,
        111,
        97,
        100,
        95,
        112,
        97,
        115,
        115,
        116,
        104,
        114,
        117,
        95,
        109,
        111,
        100,
        101,
        244
      ])) as Welcome;
      expect(welcome, isNotNull);
      expect(welcome.id, equals(MessageTypes.codeWelcome));
      expect(welcome.sessionId, equals(112233));
      expect(welcome.details.authid, equals('Richi'));
      expect(welcome.details.authrole, equals('admin'));
      expect(welcome.details.authmethod, equals('wampcra'));
      expect(welcome.details.authprovider, equals('database'));
      expect(welcome.details.roles, isNotNull);
      expect(welcome.details.roles!.broker, isNotNull);
      expect(welcome.details.roles!.broker!.features, isNotNull);
      expect(welcome.details.roles!.broker!.features!.payloadPassThruMode,
          isFalse);
      expect(welcome.details.roles!.broker!.features!.eventHistory, isFalse);
      expect(welcome.details.roles!.broker!.features!.patternBasedSubscription,
          isFalse);
      expect(welcome.details.roles!.broker!.features!.publicationTrustLevels,
          isFalse);
      expect(
          welcome.details.roles!.broker!.features!.publisherExclusion, isFalse);
      expect(welcome.details.roles!.broker!.features!.publisherIdentification,
          isFalse);
      expect(welcome.details.roles!.broker!.features!.sessionMetaApi, isFalse);
      expect(
          welcome.details.roles!.broker!.features!.subscriberBlackWhiteListing,
          isFalse);
      expect(welcome.details.roles!.broker!.features!.subscriptionMetaApi,
          isFalse);
      expect(welcome.details.roles!.dealer, isNotNull);
      expect(welcome.details.roles!.dealer!.features, isNotNull);
      expect(welcome.details.roles!.dealer!.features!.payloadPassThruMode,
          isFalse);
      expect(welcome.details.roles!.dealer!.features!.sessionMetaApi, isFalse);
      expect(welcome.details.roles!.dealer!.features!.progressiveCallResults,
          isFalse);
      expect(welcome.details.roles!.dealer!.features!.callerIdentification,
          isFalse);
      expect(welcome.details.roles!.dealer!.features!.callTimeout, isFalse);
      expect(welcome.details.roles!.dealer!.features!.callCanceling, isFalse);
      expect(welcome.details.roles!.dealer!.features!.callTrustLevels, isFalse);
      expect(welcome.details.roles!.dealer!.features!.patternBasedRegistration,
          isFalse);
      expect(welcome.details.roles!.dealer!.features!.registrationMetaApi,
          isFalse);
      expect(
          welcome.details.roles!.dealer!.features!.sharedRegistration, isFalse);

      welcome = serializer.deserialize(Uint8List.fromList([
        131,
        2,
        26,
        0,
        1,
        182,
        105,
        165,
        102,
        97,
        117,
        116,
        104,
        105,
        100,
        101,
        82,
        105,
        99,
        104,
        105,
        104,
        97,
        117,
        116,
        104,
        114,
        111,
        108,
        101,
        101,
        97,
        100,
        109,
        105,
        110,
        106,
        97,
        117,
        116,
        104,
        109,
        101,
        116,
        104,
        111,
        100,
        103,
        119,
        97,
        109,
        112,
        99,
        114,
        97,
        108,
        97,
        117,
        116,
        104,
        112,
        114,
        111,
        118,
        105,
        100,
        101,
        114,
        104,
        100,
        97,
        116,
        97,
        98,
        97,
        115,
        101,
        101,
        114,
        111,
        108,
        101,
        115,
        162,
        102,
        98,
        114,
        111,
        107,
        101,
        114,
        161,
        104,
        102,
        101,
        97,
        116,
        117,
        114,
        101,
        115,
        168,
        120,
        24,
        112,
        117,
        98,
        108,
        105,
        115,
        104,
        101,
        114,
        95,
        105,
        100,
        101,
        110,
        116,
        105,
        102,
        105,
        99,
        97,
        116,
        105,
        111,
        110,
        245,
        120,
        26,
        112,
        97,
        116,
        116,
        101,
        114,
        110,
        95,
        98,
        97,
        115,
        101,
        100,
        95,
        115,
        117,
        98,
        115,
        99,
        114,
        105,
        112,
        116,
        105,
        111,
        110,
        245,
        117,
        115,
        117,
        98,
        115,
        99,
        114,
        105,
        112,
        116,
        105,
        111,
        110,
        95,
        109,
        101,
        116,
        97,
        95,
        97,
        112,
        105,
        245,
        120,
        29,
        115,
        117,
        98,
        115,
        99,
        114,
        105,
        98,
        101,
        114,
        95,
        98,
        108,
        97,
        99,
        107,
        119,
        104,
        105,
        116,
        101,
        95,
        108,
        105,
        115,
        116,
        105,
        110,
        103,
        245,
        112,
        115,
        101,
        115,
        115,
        105,
        111,
        110,
        95,
        109,
        101,
        116,
        97,
        95,
        97,
        112,
        105,
        245,
        115,
        112,
        117,
        98,
        108,
        105,
        115,
        104,
        101,
        114,
        95,
        101,
        120,
        99,
        108,
        117,
        115,
        105,
        111,
        110,
        245,
        109,
        101,
        118,
        101,
        110,
        116,
        95,
        104,
        105,
        115,
        116,
        111,
        114,
        121,
        245,
        117,
        112,
        97,
        121,
        108,
        111,
        97,
        100,
        95,
        112,
        97,
        115,
        115,
        116,
        104,
        114,
        117,
        95,
        109,
        111,
        100,
        101,
        245,
        102,
        100,
        101,
        97,
        108,
        101,
        114,
        161,
        104,
        102,
        101,
        97,
        116,
        117,
        114,
        101,
        115,
        170,
        117,
        99,
        97,
        108,
        108,
        101,
        114,
        95,
        105,
        100,
        101,
        110,
        116,
        105,
        102,
        105,
        99,
        97,
        116,
        105,
        111,
        110,
        245,
        112,
        99,
        97,
        108,
        108,
        95,
        116,
        114,
        117,
        115,
        116,
        108,
        101,
        118,
        101,
        108,
        115,
        245,
        120,
        26,
        112,
        97,
        116,
        116,
        101,
        114,
        110,
        95,
        98,
        97,
        115,
        101,
        100,
        95,
        114,
        101,
        103,
        105,
        115,
        116,
        114,
        97,
        116,
        105,
        111,
        110,
        245,
        117,
        114,
        101,
        103,
        105,
        115,
        116,
        114,
        97,
        116,
        105,
        111,
        110,
        95,
        109,
        101,
        116,
        97,
        95,
        97,
        112,
        105,
        245,
        115,
        115,
        104,
        97,
        114,
        101,
        100,
        95,
        114,
        101,
        103,
        105,
        115,
        116,
        114,
        97,
        116,
        105,
        111,
        110,
        245,
        112,
        115,
        101,
        115,
        115,
        105,
        111,
        110,
        95,
        109,
        101,
        116,
        97,
        95,
        97,
        112,
        105,
        245,
        108,
        99,
        97,
        108,
        108,
        95,
        116,
        105,
        109,
        101,
        111,
        117,
        116,
        245,
        110,
        99,
        97,
        108,
        108,
        95,
        99,
        97,
        110,
        99,
        101,
        108,
        105,
        110,
        103,
        245,
        120,
        24,
        112,
        114,
        111,
        103,
        114,
        101,
        115,
        115,
        105,
        118,
        101,
        95,
        99,
        97,
        108,
        108,
        95,
        114,
        101,
        115,
        117,
        108,
        116,
        115,
        245,
        117,
        112,
        97,
        121,
        108,
        111,
        97,
        100,
        95,
        112,
        97,
        115,
        115,
        116,
        104,
        114,
        117,
        95,
        109,
        111,
        100,
        101,
        245
      ])) as Welcome;
      expect(welcome, isNotNull);
      expect(welcome.id, equals(MessageTypes.codeWelcome));
      expect(welcome.sessionId, equals(112233));
      expect(welcome.details.authid, equals('Richi'));
      expect(welcome.details.authrole, equals('admin'));
      expect(welcome.details.authmethod, equals('wampcra'));
      expect(welcome.details.authprovider, equals('database'));
      expect(welcome.details.roles, isNotNull);
      expect(welcome.details.roles!.broker, isNotNull);
      expect(welcome.details.roles!.broker!.features, isNotNull);
      expect(
          welcome.details.roles!.broker!.features!.payloadPassThruMode, isTrue);
      expect(welcome.details.roles!.broker!.features!.eventHistory, isTrue);
      expect(welcome.details.roles!.broker!.features!.patternBasedSubscription,
          isTrue);
      expect(welcome.details.roles!.broker!.features!.publicationTrustLevels,
          isFalse); // not send
      expect(
          welcome.details.roles!.broker!.features!.publisherExclusion, isTrue);
      expect(welcome.details.roles!.broker!.features!.publisherIdentification,
          isTrue);
      expect(welcome.details.roles!.broker!.features!.sessionMetaApi, isTrue);
      expect(
          welcome.details.roles!.broker!.features!.subscriberBlackWhiteListing,
          isTrue);
      expect(
          welcome.details.roles!.broker!.features!.subscriptionMetaApi, isTrue);
      expect(welcome.details.roles!.dealer, isNotNull);
      expect(welcome.details.roles!.dealer!.features, isNotNull);
      expect(
          welcome.details.roles!.dealer!.features!.payloadPassThruMode, isTrue);
      expect(welcome.details.roles!.dealer!.features!.sessionMetaApi, isTrue);
      expect(welcome.details.roles!.dealer!.features!.progressiveCallResults,
          isTrue);
      expect(welcome.details.roles!.dealer!.features!.callerIdentification,
          isTrue);
      expect(welcome.details.roles!.dealer!.features!.callTimeout, isTrue);
      expect(welcome.details.roles!.dealer!.features!.callCanceling, isTrue);
      expect(welcome.details.roles!.dealer!.features!.callTrustLevels, isTrue);
      expect(welcome.details.roles!.dealer!.features!.patternBasedRegistration,
          isTrue);
      expect(
          welcome.details.roles!.dealer!.features!.registrationMetaApi, isTrue);
      expect(
          welcome.details.roles!.dealer!.features!.sharedRegistration, isTrue);
    });
    test('Registered', () {
      var registered = serializer.deserialize(Uint8List.fromList(
              [131, 24, 65, 26, 1, 130, 204, 65, 26, 125, 94, 81, 104]))
          as Registered;
      expect(registered, isNotNull);
      expect(registered.id, equals(MessageTypes.codeRegistered));
      expect(registered.registerRequestId, equals(25349185));
      expect(registered.registrationId, equals(2103333224));
    });
    test('Unregistered', () {
      var unregistered = serializer.deserialize(
          Uint8List.fromList([130, 24, 67, 26, 47, 6, 4, 170])) as Unregistered;
      expect(unregistered, isNotNull);
      expect(unregistered.id, equals(MessageTypes.codeUnregistered));
      expect(unregistered.unregisterRequestId, equals(788923562));
    });
    test('Invocation', () {
      var invocation = serializer.deserialize(Uint8List.fromList(
              [132, 24, 68, 26, 0, 93, 143, 77, 26, 0, 149, 229, 38, 160]))
          as Invocation;
      expect(invocation, isNotNull);
      expect(invocation.id, equals(MessageTypes.codeInvocation));
      expect(invocation.requestId, equals(6131533));
      expect(invocation.registrationId, equals(9823526));
      expect(invocation.details, isNotNull);
      expect(invocation.details.receiveProgress, isNull);
      expect(invocation.details.caller, isNull);
      expect(invocation.details.procedure, isNull);
      expect(invocation.arguments, isNull);
      expect(invocation.argumentsKeywords, isNull);

      invocation = serializer.deserialize(Uint8List.fromList([
        133,
        24,
        68,
        26,
        0,
        93,
        143,
        77,
        26,
        0,
        149,
        229,
        39,
        160,
        129,
        109,
        72,
        101,
        108,
        108,
        111,
        44,
        32,
        119,
        111,
        114,
        108,
        100,
        33
      ])) as Invocation;
      expect(invocation, isNotNull);
      expect(invocation.id, equals(MessageTypes.codeInvocation));
      expect(invocation.requestId, equals(6131533));
      expect(invocation.registrationId, equals(9823527));
      expect(invocation.details, isNotNull);
      expect(invocation.details.receiveProgress, isNull);
      expect(invocation.details.caller, isNull);
      expect(invocation.details.procedure, isNull);
      expect(invocation.arguments![0], equals('Hello, world!'));
      expect(invocation.argumentsKeywords, isNull);

      invocation = serializer.deserialize(Uint8List.fromList([
        134,
        24,
        68,
        26,
        0,
        93,
        143,
        77,
        26,
        0,
        149,
        229,
        41,
        160,
        129,
        102,
        106,
        111,
        104,
        110,
        110,
        121,
        162,
        105,
        102,
        105,
        114,
        115,
        116,
        110,
        97,
        109,
        101,
        100,
        74,
        111,
        104,
        110,
        103,
        115,
        117,
        114,
        110,
        97,
        109,
        101,
        99,
        68,
        111,
        101
      ])) as Invocation;
      expect(invocation, isNotNull);
      expect(invocation.id, equals(MessageTypes.codeInvocation));
      expect(invocation.requestId, equals(6131533));
      expect(invocation.registrationId, equals(9823529));
      expect(invocation.details, isNotNull);
      expect(invocation.details.receiveProgress, isNull);
      expect(invocation.details.caller, isNull);
      expect(invocation.details.procedure, isNull);
      expect(invocation.arguments![0], equals('johnny'));
      expect(invocation.argumentsKeywords!['firstname'], equals('John'));
      expect(invocation.argumentsKeywords!['surname'], equals('Doe'));

      invocation = serializer.deserialize(Uint8List.fromList([
        134,
        24,
        68,
        26,
        0,
        93,
        143,
        77,
        26,
        0,
        149,
        229,
        41,
        163,
        112,
        114,
        101,
        99,
        101,
        105,
        118,
        101,
        95,
        112,
        114,
        111,
        103,
        114,
        101,
        115,
        115,
        245,
        102,
        99,
        97,
        108,
        108,
        101,
        114,
        25,
        51,
        67,
        105,
        112,
        114,
        111,
        99,
        101,
        100,
        117,
        114,
        101,
        112,
        109,
        121,
        46,
        112,
        114,
        111,
        99,
        101,
        100,
        117,
        114,
        101,
        46,
        99,
        111,
        109,
        129,
        102,
        106,
        111,
        104,
        110,
        110,
        121,
        162,
        105,
        102,
        105,
        114,
        115,
        116,
        110,
        97,
        109,
        101,
        100,
        74,
        111,
        104,
        110,
        103,
        115,
        117,
        114,
        110,
        97,
        109,
        101,
        99,
        68,
        111,
        101
      ])) as Invocation;
      expect(invocation, isNotNull);
      expect(invocation.id, equals(MessageTypes.codeInvocation));
      expect(invocation.requestId, equals(6131533));
      expect(invocation.registrationId, equals(9823529));
      expect(invocation.details, isNotNull);
      expect(invocation.details.receiveProgress, isTrue);
      expect(invocation.details.caller, equals(13123));
      expect(invocation.details.procedure, equals('my.procedure.com'));
      expect(invocation.arguments![0], equals('johnny'));
      expect(invocation.argumentsKeywords!['firstname'], equals('John'));
      expect(invocation.argumentsKeywords!['surname'], equals('Doe'));
    });
    test('Result', () {
      var result = serializer.deserialize(
              Uint8List.fromList([131, 24, 50, 26, 0, 119, 59, 247, 160]))
          as Result;
      expect(result, isNotNull);
      expect(result.id, equals(MessageTypes.codeResult));
      expect(result.callRequestId, equals(7814135));
      expect(result.details, isNotNull);
      expect(result.details.progress, false);
      expect(result.arguments, isNull);
      expect(result.argumentsKeywords, isNull);

      result = serializer.deserialize(Uint8List.fromList(
          [132, 24, 50, 26, 0, 119, 59, 247, 160, 129, 24, 30])) as Result;
      expect(result, isNotNull);
      expect(result.id, equals(MessageTypes.codeResult));
      expect(result.callRequestId, equals(7814135));
      expect(result.details, isNotNull);
      expect(result.details.progress, false);
      expect(result.arguments![0], equals(30));
      expect(result.argumentsKeywords, isNull);

      result = serializer.deserialize(Uint8List.fromList([
        133,
        24,
        50,
        26,
        0,
        93,
        143,
        77,
        160,
        129,
        102,
        106,
        111,
        104,
        110,
        110,
        121,
        162,
        102,
        117,
        115,
        101,
        114,
        105,
        100,
        24,
        123,
        101,
        107,
        97,
        114,
        109,
        97,
        10
      ])) as Result;
      expect(result, isNotNull);
      expect(result.id, equals(MessageTypes.codeResult));
      expect(result.callRequestId, equals(6131533));
      expect(result.details, isNotNull);
      expect(result.details.progress, false);
      expect(result.arguments![0], equals('johnny'));
      expect(result.argumentsKeywords!['userid'], equals(123));
      expect(result.argumentsKeywords!['karma'], equals(10));

      result = serializer.deserialize(Uint8List.fromList([
        133,
        24,
        50,
        26,
        0,
        93,
        143,
        77,
        161,
        104,
        112,
        114,
        111,
        103,
        114,
        101,
        115,
        115,
        245,
        129,
        102,
        106,
        111,
        104,
        110,
        110,
        121,
        162,
        105,
        102,
        105,
        114,
        115,
        116,
        110,
        97,
        109,
        101,
        100,
        74,
        111,
        104,
        110,
        103,
        115,
        117,
        114,
        110,
        97,
        109,
        101,
        99,
        68,
        111,
        101
      ])) as Result;
      expect(result, isNotNull);
      expect(result.id, equals(MessageTypes.codeResult));
      expect(result.callRequestId, equals(6131533));
      expect(result.details, isNotNull);
      expect(result.details.progress, isTrue);
      expect(result.arguments![0], equals('johnny'));
      expect(result.argumentsKeywords!['firstname'], equals('John'));
      expect(result.argumentsKeywords!['surname'], equals('Doe'));
    });
    // PUB / SUB
    test('Subscribed', () {
      var subscribed = serializer.deserialize(Uint8List.fromList([
        131,
        24,
        33,
        26,
        42,
        140,
        105,
        241,
        27,
        0,
        0,
        0,
        1,
        72,
        143,
        65,
        219
      ])) as Subscribed;
      expect(subscribed, isNotNull);
      expect(subscribed.id, equals(MessageTypes.codeSubscribed));
      expect(subscribed.subscribeRequestId, equals(713845233));
      expect(subscribed.subscriptionId, equals(5512315355));
    });
    test('Unsubscribed', () {
      var unsubscribed = serializer.deserialize(
              Uint8List.fromList([130, 24, 35, 26, 5, 22, 71, 189]))
          as Unsubscribed;
      expect(unsubscribed, isNotNull);
      expect(unsubscribed.id, equals(MessageTypes.codeUnsubscribed));
      expect(unsubscribed.unsubscribeRequestId, equals(85346237));
      expect(unsubscribed.details, isNull);

      unsubscribed = serializer.deserialize(Uint8List.fromList([
        131,
        24,
        35,
        26,
        5,
        22,
        71,
        189,
        162,
        108,
        115,
        117,
        98,
        115,
        99,
        114,
        105,
        112,
        116,
        105,
        111,
        110,
        26,
        0,
        1,
        225,
        186,
        102,
        114,
        101,
        97,
        115,
        111,
        110,
        120,
        24,
        119,
        97,
        109,
        112,
        46,
        97,
        117,
        116,
        104,
        101,
        110,
        116,
        105,
        99,
        97,
        116,
        105,
        111,
        110,
        46,
        108,
        111,
        115,
        116
      ])) as Unsubscribed;
      expect(unsubscribed, isNotNull);
      expect(unsubscribed.id, equals(MessageTypes.codeUnsubscribed));
      expect(unsubscribed.unsubscribeRequestId, equals(85346237));
      expect(unsubscribed.details!.reason, equals('wamp.authentication.lost'));
      expect(unsubscribed.details!.subscription, equals(123322));
    });
    test('Published', () {
      var published = serializer.deserialize(Uint8List.fromList(
              [131, 17, 26, 14, 73, 193, 175, 27, 0, 0, 0, 1, 8, 1, 246, 30]))
          as Published;
      expect(published, isNotNull);
      expect(published.id, equals(MessageTypes.codePublished));
      expect(published.publishRequestId, equals(239714735));
      expect(published.publicationId, equals(4429313566));
    });
    test('Event', () {
      var event = serializer.deserialize(Uint8List.fromList([
        132,
        24,
        36,
        27,
        0,
        0,
        0,
        1,
        72,
        143,
        65,
        219,
        27,
        0,
        0,
        0,
        1,
        8,
        1,
        246,
        30,
        160
      ])) as Event;
      expect(event, isNotNull);
      expect(event.id, equals(MessageTypes.codeEvent));
      expect(event.subscriptionId, equals(5512315355));
      expect(event.publicationId, equals(4429313566));
      expect(event.details, isNotNull);
      expect(event.details.publisher, isNull);
      expect(event.details.topic, isNull);
      expect(event.details.trustlevel, isNull);
      expect(event.arguments, isNull);
      expect(event.argumentsKeywords, isNull);

      event = serializer.deserialize(Uint8List.fromList([
        133,
        24,
        36,
        27,
        0,
        0,
        0,
        1,
        72,
        143,
        65,
        219,
        27,
        0,
        0,
        0,
        1,
        8,
        1,
        246,
        30,
        160,
        129,
        24,
        30
      ])) as Event;
      expect(event, isNotNull);
      expect(event.id, equals(MessageTypes.codeEvent));
      expect(event.subscriptionId, equals(5512315355));
      expect(event.publicationId, equals(4429313566));
      expect(event.details, isNotNull);
      expect(event.details.publisher, isNull);
      expect(event.details.topic, isNull);
      expect(event.details.trustlevel, isNull);
      expect(event.arguments![0], equals(30));
      expect(event.argumentsKeywords, isNull);

      event = serializer.deserialize(Uint8List.fromList([
        134,
        24,
        36,
        27,
        0,
        0,
        0,
        1,
        72,
        143,
        65,
        219,
        27,
        0,
        0,
        0,
        1,
        8,
        1,
        246,
        30,
        160,
        129,
        102,
        106,
        111,
        104,
        110,
        110,
        121,
        162,
        102,
        117,
        115,
        101,
        114,
        105,
        100,
        24,
        123,
        101,
        107,
        97,
        114,
        109,
        97,
        10
      ])) as Event;
      expect(event, isNotNull);
      expect(event.id, equals(MessageTypes.codeEvent));
      expect(event.subscriptionId, equals(5512315355));
      expect(event.publicationId, equals(4429313566));
      expect(event.details, isNotNull);
      expect(event.details.publisher, isNull);
      expect(event.details.topic, isNull);
      expect(event.details.trustlevel, isNull);
      expect(event.arguments![0], equals('johnny'));
      expect(event.argumentsKeywords!['userid'], equals(123));
      expect(event.argumentsKeywords!['karma'], equals(10));

      event = serializer.deserialize(Uint8List.fromList([
        134,
        24,
        36,
        27,
        0,
        0,
        0,
        1,
        72,
        143,
        65,
        219,
        27,
        0,
        0,
        0,
        1,
        8,
        1,
        246,
        30,
        161,
        105,
        112,
        117,
        98,
        108,
        105,
        115,
        104,
        101,
        114,
        26,
        0,
        18,
        202,
        52,
        129,
        102,
        106,
        111,
        104,
        110,
        110,
        121,
        162,
        105,
        102,
        105,
        114,
        115,
        116,
        110,
        97,
        109,
        101,
        100,
        74,
        111,
        104,
        110,
        103,
        115,
        117,
        114,
        110,
        97,
        109,
        101,
        99,
        68,
        111,
        101
      ])) as Event;
      expect(event, isNotNull);
      expect(event.id, equals(MessageTypes.codeEvent));
      expect(event.subscriptionId, equals(5512315355));
      expect(event.publicationId, equals(4429313566));
      expect(event.details, isNotNull);
      expect(event.details.publisher, equals(1231412));
      expect(event.details.topic, isNull);
      expect(event.details.trustlevel, isNull);
      expect(event.arguments![0], equals('johnny'));
      expect(event.argumentsKeywords!['firstname'], equals('John'));
      expect(event.argumentsKeywords!['surname'], equals('Doe'));

      event = serializer.deserialize(Uint8List.fromList([
        134,
        24,
        36,
        27,
        0,
        0,
        0,
        1,
        72,
        143,
        65,
        219,
        27,
        0,
        0,
        0,
        1,
        8,
        1,
        246,
        30,
        163,
        105,
        112,
        117,
        98,
        108,
        105,
        115,
        104,
        101,
        114,
        26,
        0,
        18,
        202,
        52,
        101,
        116,
        111,
        112,
        105,
        99,
        105,
        100,
        101,
        46,
        100,
        101,
        46,
        99,
        111,
        109,
        106,
        116,
        114,
        117,
        115,
        116,
        108,
        101,
        118,
        101,
        108,
        1,
        129,
        102,
        106,
        111,
        104,
        110,
        110,
        121,
        162,
        105,
        102,
        105,
        114,
        115,
        116,
        110,
        97,
        109,
        101,
        100,
        74,
        111,
        104,
        110,
        103,
        115,
        117,
        114,
        110,
        97,
        109,
        101,
        99,
        68,
        111,
        101
      ])) as Event;
      expect(event, isNotNull);
      expect(event.id, equals(MessageTypes.codeEvent));
      expect(event.subscriptionId, equals(5512315355));
      expect(event.publicationId, equals(4429313566));
      expect(event.details, isNotNull);
      expect(event.details.publisher, equals(1231412));
      expect(event.details.topic, equals('de.de.com'));
      expect(event.details.trustlevel, equals(1));
      expect(event.arguments![0], equals('johnny'));
      expect(event.argumentsKeywords!['firstname'], equals('John'));
      expect(event.argumentsKeywords!['surname'], equals('Doe'));
    });
    test('deserializePPT', () {
      var pptPayload = serializer.deserializePPT(Uint8List.fromList([
        162,
        100,
        97,
        114,
        103,
        115,
        131,
        24,
        100,
        99,
        116,
        119,
        111,
        245,
        102,
        107,
        119,
        97,
        114,
        103,
        115,
        163,
        100,
        107,
        101,
        121,
        49,
        24,
        100,
        100,
        107,
        101,
        121,
        50,
        99,
        116,
        119,
        111,
        100,
        107,
        101,
        121,
        51,
        245
      ]));

      expect(pptPayload, isNotNull);
      expect(pptPayload?.arguments, isNotNull);
      expect(pptPayload?.argumentsKeywords, isNotNull);
      expect(pptPayload!.arguments, isA<List>());
      expect(pptPayload.arguments!.length, equals(3));
      expect(pptPayload.arguments![0], equals(100));
      expect(pptPayload.arguments![1], equals('two'));
      expect(pptPayload.arguments![2], equals(true));
      expect(pptPayload.argumentsKeywords, isA<Map>());
      expect(pptPayload.argumentsKeywords!['key1'], equals(100));
      expect(pptPayload.argumentsKeywords!['key2'], equals('two'));
      expect(pptPayload.argumentsKeywords!['key3'], equals(true));
    });
  });
}
